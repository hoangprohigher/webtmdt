version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    restart: always
    ports:
      - "6000:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/ecommerce"
      NEXT_PUBLIC_URL: "https://admin.shopdoan.shop"
      JWT_SECRET_KEY: "a-super-secret-key-for-admin-change-me"
      NODE_ENV: "production"
      # Các biến khác để trống nếu không dùng
      NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ""
      NEXT_PUBLIC_GOOGLE_OAUTH_ID: ""
      GOOGLE_OAUTH_SECRET: ""
      MAIL_SMTP_SERVICE: ""
      MAIL_SMTP_PASS: ""
      MAIL_SMTP_USER: ""
    depends_on:
      db:
        condition: service_healthy

  storefront:
    build:
      context: .
      dockerfile: apps/storefront/Dockerfile
    restart: always
    ports:
      - "6001:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/ecommerce"
      NEXT_PUBLIC_URL: "https://thanhlab.shopdoan.shop"
      NODE_ENV: "production"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:

